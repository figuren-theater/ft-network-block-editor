{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAC4D;;AAM5D;AACA;AACA;AAC2E;AAC3E;AACA;;AAE8D;AAC9D;;AAGA;AACA;AACA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAC8C;;AAG9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,0EAAuB,CAAE,gBAAgB,EAAE;EAC1CS,KAAK,EAAE,iBAAiB;EACxBD,IAAIA,0DAAAA;AACL,CAAC,CAAE;AACHR,0EAAuB,CAAE,aAAa,EAAE;EACvCS,KAAK,EAAE,SAAS;EAChBD,IAAIA,0DAAAA;AACL,CAAC,CAAE;;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACAE,EAAE,CAACC,QAAQ,CAAE,YAAW;EACvB,MAAMC,gBAAgB,GAAGV,uDAAM,CAAEI,uDAAa,CAAE,CAACO,eAAe,CAAE,gBAAgB,CAAE;EACpF,IAAKD,gBAAgB,EAAG;IACvBX,yDAAQ,CAAEK,uDAAa,CAAE,CAACQ,aAAa,CAAE,gBAAgB,CAAE;EAAE;AAC/D,CAAC,CAAE;;AAGH;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,MAAM,GAAG,YAAW;EAC1B;EACAf,yDAAQ,CAAEK,uDAAa,CAAE,CAACW,cAAc,CACvC,CACC,eAAe,EACf,WAAW,EACX,gBAAgB,CAChB,CACD;AACF,CAAC,C","sources":["webpack://ft-network-block-editor/external window [\"wp\",\"blocks\"]","webpack://ft-network-block-editor/external window [\"wp\",\"data\"]","webpack://ft-network-block-editor/external window [\"wp\",\"editPost\"]","webpack://ft-network-block-editor/external window [\"wp\",\"i18n\"]","webpack://ft-network-block-editor/webpack/bootstrap","webpack://ft-network-block-editor/webpack/runtime/compat get default export","webpack://ft-network-block-editor/webpack/runtime/define property getters","webpack://ft-network-block-editor/webpack/runtime/hasOwnProperty shorthand","webpack://ft-network-block-editor/webpack/runtime/make namespace object","webpack://ft-network-block-editor/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Registers a new block provided a unique name and an object defining its behavior.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\r\n */\r\nimport { registerBlockCollection } from '@wordpress/blocks';\r\n\r\n\r\n\r\n\r\n\r\n// 1st add dependenciy strings\r\n// to our index.asset.php\r\n// so in this case 'wp-data'\r\nimport { dispatch, select, useDispatch, useSelect } from '@wordpress/data';\r\n// 2nd - extract arguments\r\n// const { select, dispatch } = wp.data;\r\n\r\nimport { store as editPostStore } from '@wordpress/edit-post';\r\n// import { store as preferencesStore } from '@wordpress/preferences';\r\n\r\n\r\n/**\r\n * Retrieves the translation of text.\r\n *\r\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\r\n * All files containing `style` keyword are bundled together. The code used\r\n * gets applied both to the front of your site and to the editor.\r\n *\r\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\r\n */\r\n// import './style.scss';\r\n\r\n// import icon from './shared/js/icon';\r\nimport { icon } from '@figuren.theater/logos';\r\n\r\n\r\n/**\r\n * 1. figuren.theater Block-Collection\r\n *\r\n * all blocks within the namespace of\r\n * 'figurentheater' will be wrapped\r\n * under this collection in the block-inspector\r\n *\r\n * @see https://make.wordpress.org/core/2020/02/27/block-collections/\r\n */\r\nregisterBlockCollection( 'figurentheater', {\r\n\ttitle: 'figuren.theater',\r\n\ticon,\r\n} );\r\nregisterBlockCollection( 'theatrebase', {\r\n\ttitle: 'Theater',\r\n\ticon,\r\n} );\r\n\r\n\r\n\r\n/**\r\n * 2. disable fullscreen\r\n *\r\n * permanently disable fullscreen mode by default\r\n * @see https://make.wordpress.org/core/2020/03/03/fullscreen-mode-enabled-by-default-in-the-editor/\r\n *\r\n * maybe, nicer Alternative at:\r\n * @see https://plugins.trac.wordpress.org/browser/blockeditor-fullscreen-mode-control/trunk/assets/js/fullscreen.js\r\nwindow.onload = function() {\r\n\tconst isFullscreenMode = select( editPostStore ).isFeatureActive( 'fullscreenMode' );\r\n\tif ( isFullscreenMode ) {\r\n\t\tdispatch( editPostStore ).toggleFeature( 'fullscreenMode' ); }\r\n}\r\n */\r\n\r\n\r\n/// window.onload stopped working for some un-researched reason\r\n/// wp.domReady is WORKING\r\n\r\n// https://github.com/WordPress/gutenberg/issues/13811#issuecomment-500930584\r\nwp.domReady( function() {\r\n\tconst isFullscreenMode = select( editPostStore ).isFeatureActive( 'fullscreenMode' );\r\n\tif ( isFullscreenMode ) {\r\n\t\tdispatch( editPostStore ).toggleFeature( 'fullscreenMode' ); }\r\n} );\r\n\r\n\r\n/**\r\n * 3.\r\n */\r\n// import './block-styles/core-columns/newspack';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 4.\r\n// \r\n// TEMP deactivated, for not beeing finished\r\n// and doing this mess here\r\n// sorry to everybody reading this\r\n// \r\n// I promise to do better!\r\n// \r\n// import './block-styles/core-group/copy-2-clipboard';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * 5. Hide some Blocks from the inserter, but keep them working\r\n *    a kinda house-keeping as 'unregisterBlockLight' ;)\r\n *\r\n *    some helping code examples on hideBlockTypes()\r\n *    https://github.com/WordPress/gutenberg/issues/14139#issuecomment-480261866\r\n */\r\n\r\nwindow.onload = function() {\r\n\t// remove stuff that is not for 'typical' users\r\n\tdispatch( editPostStore ).hideBlockTypes( \r\n\t\t[\r\n\t\t\t'core/freeform',\r\n\t\t\t'core/html',\r\n\t\t\t'core/shortcode',\r\n\t\t]\r\n\t);\r\n}\r\n"],"names":["registerBlockCollection","dispatch","select","useDispatch","useSelect","store","editPostStore","__","icon","title","wp","domReady","isFullscreenMode","isFeatureActive","toggleFeature","window","onload","hideBlockTypes"],"sourceRoot":""}